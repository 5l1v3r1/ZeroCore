#version 130
//----- Shader Inputs/Outputs -----
uniform float Time;
flat in int psInInteger;
flat in ivec2 psInInteger2;
flat in ivec3 psInInteger3;
flat in ivec4 psInInteger4;
out vec4 [4] outputs;

//----- Struct Definitions -----
struct InOutIntegerVectorsPixelFrag
{
  int Integer;
  ivec2 Integer2;
  ivec3 Integer3;
  ivec4 Integer4;
};

struct VaryingsIntegerVectorsTest_Pixel
{
  float Time;
  int Integer;
  ivec2 Integer2;
  ivec3 Integer3;
  ivec4 Integer4;
};

//----- Forward Declarations -----
void _InOutIntegerVectorsPixelFragPreConstructor(inout InOutIntegerVectorsPixelFrag self);
InOutIntegerVectorsPixelFrag _InOutIntegerVectorsPixelFragConstructor();
void _InOutIntegerVectorsPixelFragMain(inout InOutIntegerVectorsPixelFrag self);

void _VaryingsIntegerVectorsTest_PixelPreConstructor(inout VaryingsIntegerVectorsTest_Pixel self);
VaryingsIntegerVectorsTest_Pixel _VaryingsIntegerVectorsTest_PixelConstructor();
void _VaryingsIntegerVectorsTest_PixelMain(inout VaryingsIntegerVectorsTest_Pixel self);
void CopyInputs(inout VaryingsIntegerVectorsTest_Pixel self);
void CopyOutputs(inout VaryingsIntegerVectorsTest_Pixel self);
void main(void);

//----- Global Variable Declarations -----
//----- InOutIntegerVectorsPixelFrag Functions -----
void _InOutIntegerVectorsPixelFragPreConstructor(inout InOutIntegerVectorsPixelFrag self)
{
  self.Integer = int(0);
  self.Integer2 = ivec2(0, 0);
  self.Integer3 = ivec3(0, 0, 0);
  self.Integer4 = ivec4(0, 0, 0, 0);
}

InOutIntegerVectorsPixelFrag _InOutIntegerVectorsPixelFragConstructor()
{
  InOutIntegerVectorsPixelFrag self;
  _InOutIntegerVectorsPixelFragPreConstructor(self);
  return self;
}

void _InOutIntegerVectorsPixelFragMain(inout InOutIntegerVectorsPixelFrag self)
{
}

//----- VaryingsIntegerVectorsTest_Pixel Functions -----
void _VaryingsIntegerVectorsTest_PixelPreConstructor(inout VaryingsIntegerVectorsTest_Pixel self)
{
  self.Time = float(0.0);
  self.Integer = int(0);
  self.Integer2 = ivec2(0, 0);
  self.Integer3 = ivec3(0, 0, 0);
  self.Integer4 = ivec4(0, 0, 0, 0);
}

VaryingsIntegerVectorsTest_Pixel _VaryingsIntegerVectorsTest_PixelConstructor()
{
  VaryingsIntegerVectorsTest_Pixel self;
  _VaryingsIntegerVectorsTest_PixelPreConstructor(self);
  return self;
}

void _VaryingsIntegerVectorsTest_PixelMain(inout VaryingsIntegerVectorsTest_Pixel self)
{
  InOutIntegerVectorsPixelFrag _inoutintegervectorspixelfrag = _InOutIntegerVectorsPixelFragConstructor();
  _inoutintegervectorspixelfrag.Integer = self.Integer;
  _inoutintegervectorspixelfrag.Integer2 = self.Integer2;
  _inoutintegervectorspixelfrag.Integer3 = self.Integer3;
  _inoutintegervectorspixelfrag.Integer4 = self.Integer4;
  _InOutIntegerVectorsPixelFragMain(_inoutintegervectorspixelfrag);
}

//----- VaryingsIntegerVectorsTest_Pixel Final Shader Functions -----
void CopyInputs(inout VaryingsIntegerVectorsTest_Pixel self)
{
  self.Time = Time;
  self.Integer = psInInteger;
  self.Integer2 = psInInteger2;
  self.Integer3 = psInInteger3;
  self.Integer4 = psInInteger4;
}

void CopyOutputs(inout VaryingsIntegerVectorsTest_Pixel self)
{
}

//----- Main -----
void main(void)
{
  VaryingsIntegerVectorsTest_Pixel varyingsintegervectorstest_pixel = _VaryingsIntegerVectorsTest_PixelConstructor(); 
  CopyInputs(varyingsintegervectorstest_pixel);
  _VaryingsIntegerVectorsTest_PixelMain(varyingsintegervectorstest_pixel);
  CopyOutputs(varyingsintegervectorstest_pixel);
}

